#include <EEPROM.h>
#define DETECT 2    // pin 2 for sensor(detection)
#define MOTOR_PIN_1 12   // pin 12 for motor_pin_1
#define MOTOR_PIN_2 11  // pin 11 for motor_pin_2
#define MOTOR_PIN_3 10  // pin 10 for motor_pin_3
#define MOTOR_PIN_4 9  // pin 9 for motor_pin_4
int step_number;    //declaring flag of steps for motor
int z=1;    //declaring flag z that prevent motor from spining after starting
int counter;    //counting number on steps
int countera;  
int counterb;  

void setup() {
//Serial.begin(9600);   //signal observation
//Serial.println("Cukiernik Test");
pinMode(MOTOR_PIN_1, OUTPUT);   //define output pins
pinMode(MOTOR_PIN_2, OUTPUT);     
pinMode(MOTOR_PIN_3, OUTPUT);     
pinMode(MOTOR_PIN_4, OUTPUT);     
pinMode(DETECT, INPUT);   //define input pin
countera = EEPROM.read(1);   //
counterb = EEPROM.read(2);    //  
counter= counterb*255 + countera;   //
step_number = EEPROM.read(0);   //
}

void loop() {  
if (z==1){    //preventing microcontroler to do anything for 1s after starting
  delay(1000);
  z=0;
  }else{
    if (counter != 0){
      for(int b =counter; b<1024; b++){
      OneStep();
      delay(2);   
      }
    Rezet();
    }else{
int detected = digitalRead(DETECT);   // read laser sensor sygnal
      if( detected == LOW){   //spin to win   
       //Serial.println("No laser");
        for(int a =0; a<1024; a++){
        OneStep();
        delay(2);
        }
      Rezet();
      }else{
      //Serial.println("Detected!");
      }
      delay(200);
    }
  }
}

void OneStep(){
switch(step_number){    //one step->rotation clockwise
  case 0:
  digitalWrite(MOTOR_PIN_1, LOW);
  digitalWrite(MOTOR_PIN_2, LOW);
  digitalWrite(MOTOR_PIN_3, LOW);
  digitalWrite(MOTOR_PIN_4, HIGH);
  break;
  case 1:
  digitalWrite(MOTOR_PIN_1, LOW);
  digitalWrite(MOTOR_PIN_2, LOW);
  digitalWrite(MOTOR_PIN_3, HIGH);
  digitalWrite(MOTOR_PIN_4, LOW);
  break;
  case 2:
  digitalWrite(MOTOR_PIN_1, LOW);
  digitalWrite(MOTOR_PIN_2, HIGH);
  digitalWrite(MOTOR_PIN_3, LOW);
  digitalWrite(MOTOR_PIN_4, LOW);
  break;
  case 3:
  digitalWrite(MOTOR_PIN_1, HIGH);
  digitalWrite(MOTOR_PIN_2, LOW);
  digitalWrite(MOTOR_PIN_3, LOW);
  digitalWrite(MOTOR_PIN_4, LOW);
  break;
}
step_number++;    //reseting step flag
countera++;    //counting steps
EEPROM.write(0, step_number);
EEPROM.write(1, countera);   //saving information in eeprom
//Serial.println(countera);
//Serial.println(counterb);
//Serial.println(step_number);
  if(step_number > 3){
    step_number = 0;
    EEPROM.write(0, 0);
  }
  if(countera >255){
    countera = 1;
    counterb++;
    EEPROM.write(2, counterb);
  }
}

void Rezet(){
  digitalWrite(MOTOR_PIN_1, LOW);
  digitalWrite(MOTOR_PIN_2, LOW);
  digitalWrite(MOTOR_PIN_3, LOW);
  digitalWrite(MOTOR_PIN_4, LOW);
  step_number = 0;
  countera = 0;
  counterb = 0;
  counter = 0;
  EEPROM.write(0, step_number);
  EEPROM.write(1, countera);  
  EEPROM.write(2, counterb);
}
